# Widgets

## Getting Started

Tribe widgets are components from community which you can easily embed in your product, website, or service.

Using Tribe widgets is super simple. Start by pasting following script in your website's `<head>` tag.

<div class="center-column"></div>

```html
<!-- Tribe Tag -->
<script>
  (function(t,r,i,b,e){
    if(typeof t.Tribe==='function'){t.Tribe('reload',{portal:i});}
    else{b=function(){b.r(arguments);};b.q=[];b.r=function(args){b.q.push(args);};
    t.Tribe=b; e=r.createElement('script');e.type='text/javascript';e.async=true;
    e.src=i+'/widget/v1/main.js?t='+Math.ceil(new Date() / 3e5) * 3e5;
    var x=r.getElementsByTagName('script')[0];x.parentNode.insertBefore(e,x);
    t.Tribe('boot',{portal:i});}
  })(window,document,'{YourCommunityAddress}');
</script>
```

Make sure to replace {YourCommunityAddress} with the root address to your community, including https://. For instance if your community url is `https://community.tribe.so`, the script should look like this:

<div class="center-column"></div>
```html
<!-- Tribe Tag -->
<script>
  (function(t,r,i,b,e){
    if(typeof t.Tribe==='function'){t.Tribe('reload',{portal:i});}
    else{b=function(){b.r(arguments);};b.q=[];b.r=function(args){b.q.push(args);};
    t.Tribe=b; e=r.createElement('script');e.type='text/javascript';e.async=true;
    e.src=i+'/widget/v1/main.js?t='+Math.ceil(new Date() / 3e5) * 3e5;
    var x=r.getElementsByTagName('script')[0];x.parentNode.insertBefore(e,x);
    t.Tribe('boot',{portal:i});}
  })(window,document,'https://community.tribe.so');
</script>
```

After the script is in place you can use `window.Tribe` function to add widgets to your website.

`window.Tribe` accepts one or two arguments. The first argument is the widget type or action that you want to perform, and the second argument is an object which defines widget's options.

<div class="center-column"></div>
```html
<script>
  window.Tribe('widgetType', {id: 'test'})
</script>
```


## Form Widget

Using form widgets you can display community signup or login form in your website. Since this widget injects HTML into your page it'll automatically adapts look and feel of your webpage. You can additionaly customize it using your website's CSS.

<div class="center-column"></div>
```html
<div id="signup-form"></div>
<script>
  window.Tribe('form', {
    id: 'signup-form', 
    type: 'signup'
  })
</script>
```

The script above results in a form like this:

<%= image_tag 'signup-widget.png', class: 'img' %>

### Widget Options

<table>
  <thead>
    <th>Option</th><th>Default</th><th>Description</th>
  </thead>
  <tbody>
    <tr>
      <td><code>id</code></td>
      <td><code>null</code></td>
      <td>The ID of the div to append the widget</td>
    </tr>
    <tr>
      <td><code>type</code></td>
      <td><code>signup</code></td>
      <td>The type of the form. Can be <code>signup</code> or <code>login</code>.</td>
    </tr>
    <tr>
      <td><code>labels</code></td>
      <td><code>{<br />email: 'Email', <br />password: 'Password', <br />name: 'Name'<br />}</code></td>
      <td>The form labels for each field.</td>
    </tr>
    <tr>
      <td><code>fields</code></td>
      <td><code>['name', 'email', 'password']</code></td>
      <td>Defines the order and visibility of fields.</td>
    </tr>
    <tr>
      <td><code>redirect</code></td>
      <td><code>null</code></td>
      <td>Where to go after the form is submitted successfully.</td>
    </tr>  
  </tbody>
</table>

## Questions Widget

Using questions widget you can embed a feed of questions around certain topic(s) right into your website. Visitors can ask new questions, follow them and find answers to the questions.

Using components option you're able to define which items should be visible inside the widget. For instance you can display or hide the breadcrumb, topic header, sidebar, question input, etc.

<div class="center-column"></div>
```html
<div id="questions-widget"></div>
<script>
  window.Tribe('questions', {
    topicId: '5babe5eb3d9228aa7c423c66', 
    id: 'questions-widget', 
    components: ['input']
  })
</script>
```

The script above results in the following widget:

<%= image_tag 'questions-widget.png', class: 'img' %>



### Widget Options

<table>
  <thead>
    <th>Option</th><th>Default</th><th>Description</th>
  </thead>
  <tbody>
    <tr>
      <td><code>id</code></td>
      <td><code>null</code></td>
      <td>The ID of the div to append the widget.</td>
    </tr>
    <tr>
      <td><code>topicId</code></td>
      <td><code>null</code></td>
      <td>The widget will show only questions with the defined topic ID.</td>
    </tr>
    <tr>
      <td><code>components</code></td>
      <td><code>[<br />'breadcrumb', 'sidebar', <br />'header', 'input', <br />'suggestions'<br />]</code></td>
      <td>Defines which elements should be displayed in the widget.</td>
    </tr>
    <tr>
      <td><code>fields</code></td>
      <td><code>['name', 'email', 'password']</code></td>
      <td>Defines the order and visibility of fields.</td>
    </tr>
    <tr>
      <td><code>redirect</code></td>
      <td><code>null</code></td>
      <td>Where to go after the form is submitted successfully.</td>
    </tr>  
  </tbody>
</table>


## Custom Widgets

In many cases, Tribe builds a very custom widget which suites your company's needs. Tribe provides a widget ID to your company and you can insert the widget using following script:

<div class="center-column"></div>
```html
<div id="custom-widget"></div>
<script>
  window.Tribe('widget', {
    id: 'custom-widget', 
    widgetId: '<Custom Widgets ID>',
    optionA: valueA,
    optionB: valueB
  })
</script>
```

Please note that `optionA` and `optionB` are sample names. Each custom widget has different sets of options. Tribe team email you a detailed instruction about your custom widget which includes all available options.

## User Authentication

In Tribe, there are three different authentication methods available for widgets.

### Session

If you don't have a separate userbase or want Tribe to handle authentication this is the right authentication method.

The widget will check Tribe Community to see if the user is logged in there. If they are not, we'll show a Signup/Login button inside the widgets.

User can click on the button and login in a new window. The platform will return user to the previous page after user is logged in.

### JWT (JSON Web Token)

In this method you'll sign a JSON token with User's information using a private key and pass it as an option to the widget.

You should login to your community as an Admin and go to Single Sign-On section under Admin Panel to access your private key. In the Single Sign-On section you can find examples on how to generate the JWT in Node.js, PHP, Java, Python and Ruby programming languages.

You can use JWT to pass widget-specific data as well.

Here is how a Question Widget script looks like with JWT:

<div class="center-column"></div>
```html
<div id="questions-widget"></div>
<script>
  window.Tribe('questions', {
    topicId: '5babe5eb3d9228aa7c423c66', 
    id: 'questions-widget', 
    components: ['input'],
    jwt: '<The JWT generated in backend goes here>'
  })
</script>
```

### OAuth2

To enable OAuth2 on your widgets you need to create an OAuth2 app for Tribe on your side and email us the following information to dev@tribe.so:

* Client ID
* Client Secret
* Authorization URL
* Callback URL
* Token URL
* Scopes

We will setup the OAuth2 Single Sign-On for your community on our side. Any time a user accesses a widget which needs authentication, we'll redirect user to the authorization URL. If user is already logged in on your application, they'll get logged in right away. Otherwise, they'll see your login screen and will be redirected to the widget after they're signed in.





